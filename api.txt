Unauthorized endpoints:

Users:

✅ POST: login | Body example: { "email": "domi@gmail.com", "password": "password" }
✅ POST: register | Body example: { "name": "Bence", "email": "bence@gmail.com", "password": "password" }

Authorized endpoints:

Users:

✅ POST: logout | No Body | Logs out currently logged in user | Conditions: none
✅ GET: user    | No Body | Retrieves the currently logged in user | Conditions: none
✅ DELETE: users/{id} | No Body | Deletes the user with the associated ID | Conditions: Admin, or if the id belongs to the logged in user
✅ PUT: users/{id} | Body example: { "name": "Bence", "email": "bence@gmail.com", "password": "password" } [optional fields] | Updates the user with the associated ID | Conditions: Admin, or if the id belongs to the logged in user
✅ PUT: users/{id}/password | Body example: { "current_password": "c_password", "new_password": "n_password" } | Updates the logged in user's password | Conditions: Admin, or if the id belongs to the logged in user

Households:

✅ POST: households | Body example: { "name": "MyHousehold", "identifier" : "my_household123" } | Creates a new household | Conditions: none
✅ GET: households/{search}?per_page=10&page=1 | No Body | Retrieves all households, that either has the search string in the name or the identifier | Conditions: none
✅ GET: households/{id}/users | No Body | Retrieves users in specified household | Conditions: user must be a member of the household or admin
✅ GET: households/{id}/relationship | No Body | Retrieves the logged in users relationship to the specified household (NonMember, Member, Owner, Applied) | Conditions: none
✅ GET: households/{id} | No Body | Retrieves the specified household | Conditions: none
✅ GET: users/{user_id}/households | No Body | Retrieves all of the currently logged in users households | Conditions: user_id is the logged in user or admin
✅ DELETE: households/{id} | No Body | Deletes the households with the associated ID | Conditions: The logged in user is either admin or the owner of the household
✅ PUT: households/{id} | { "name": "MyHousehold", "identifier" : "my_household123" } | Updates the household with the associated ID | Conditions: The logged in user is either admin or the owner of the household

Applications: 

✅ POST: households/{household_id}/applications | No Body | Creates a new application | Conditions: The user is not in this household already, and an application with the id-s does not exist.
✅ GET: users/{user_id}/applications | No Body | Retrieves all of the applications the logged in user sent | Conditions: none
✅ GET: users/{user_id}/applications/households | No Body | Retrieves all of the households the logged in user sent an application to | Conditions: none
✅ GET: households/{household_id}/applications | No Body | Retrieves applications that got sent to the given household | Conditions: admin, or the logged in user is the owner of the household
✅ GET: households/{household_id}/applications/users | No Body | Retrieves users that sent applications to the given household | Conditions: admin, or the logged in user is the owner of the household
✅ GET: users/{user_id}/households/{household_id}/application | No Body | Retrieves the application which the specified user sent to the specified household | Conditions: admin, or the logged in user's id matches the given user_id
✅ POST: applications/{id} | No Body | Creates a new UserHousehold, using the data of the application | Conditions: Admin, or if the logged in user is the owner of the household the application got sent to
✅ DELETE: applications/{id} | No Body | Deletes the application with the associated ID | Conditions: Admin, or the logged in user is either the one who sent it, or the owner of the household the application got sent to

Groceries: 

✅ POST: households/{household_id}/groceries | Body example: { "name": "Alma", "quantity": 2, "unit": "Pieces", "Description": "This is the description"} | Creates a new grocery item | Conditions: Admin, or the currently logged in user is in the given household
✅ PUT: households/{household_id}/groceries/{id} | Body example: { "name": "Alma", "quantity": 2, "unit": "Pieces", "Description": "This is the description"} | Updates a grocery item | Conditions: Admin, or the currently logged in user is in the given household, and the creator of the grocery
✅ GET: households/{household_id}/groceries | No Body | Retrieves all of the groceries that belongs to the given household id | Conditions: Admin, or the user is in the given household
✅ DELETE: households/{household_id}/groceries/{id} | No Body | Deletes the grocery with the associated ID | Conditions: Admin, or the user is in the household that the grocery belongs to

Comments:

✅ POST: households/{household_id}/groceries/{grocery_id} | Body example: { "content": "Ezt én nem veszem meg" } | Creates a new comment for a grocery | Conditions: Admin, or user has to be in the given household
✅ GET: households/{household_id}/groceries/{grocery_id}/comments | No Body | Queries all comments related to the grocery | Conditions: Admin, or user has to be in the given household
✅ DELETE: households/{household_id}/groceries/{grocery_id}/comments/{id} | No Body | Deletes the given comment | Conditions: Admin, and the user has to be the creator of the comment